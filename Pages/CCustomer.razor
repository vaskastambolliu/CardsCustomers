@page "/ccustomer"
@page "/ccustomer/{id:int}"
@using CardsCustomers.Models.Services;
@using CardsCustomers.Models;
@inject ICustomerService CustomerService
@inject NavigationManager NavigationManager

@*<h3>Customer</h3>*@
<button type="submit" class="btn btn-outline-primary"
        @onclick="@(() => BackToCustomers())">
    Back to Customers
</button>
<br/>
@if (Id is null)
{
    <PageTitle >Create a new Customer </PageTitle>
    <h3 class="text-center">Create a New Customer</h3>
}
else
{
    <PageTitle>Edit  </PageTitle>
    <h3 class="text-center">Edit @Customer.Name @Customer.Surname</h3>
}

<EditForm Model="Customer" OnSubmit="HandleSubmit">
    <br />


    <div class="row mt-3">
        <label for="Name" class="col-sm-2 col-form-label">
            Name
        </label>
        <div class="col-sm-4">
            <InputText id="newvalue" class="form-control"
                         @bind-Value="Customer.Name" />
        </div>
    </div>





    <div class="row mt-3">
        <label for="Surname" class="col-sm-2 col-form-label">
            Surname
        </label>
        <div class="col-sm-4">
            <InputText id="Surname" class="form-control"
                       @bind-Value="Customer.Surname" />
        </div>
    </div>




    <div class="row mt-3">
        <label for="DateOfBirth" class="col-sm-2 col-form-label">
            DateOfBirth
        </label>
        <div class="col-sm-4">
            <InputDate id="DateOfBirth" class="form-control"
                       @bind-Value="Customer.DateOfBirth" />
        </div>
    </div>






    <div class="row mt-3">
        <label for="Email" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-sm-4">
            <InputText id="Email" class="form-control"
                       @bind-Value="Customer.Email" />
        </div>
    </div>





    <div class="row mt-3">
        <label for="Phone" class="col-sm-2 col-form-label">
            Phone
        </label>
        <div class="col-sm-4">
            <InputText id="Phone" class="form-control"
                       @bind-Value="Customer.Phone" />
        </div>
    </div>





    <div class="row mt-3">
        <label for="TimeStampIdCard" class="col-sm-2 col-form-label">
            Card Nr.
        </label>
        <div class="col-sm-4">
            <InputText id="TimeStampIdCard" class="form-control"
                       @bind-Value="Customer.TimeStampIdCard" />
        </div>
    </div>





    <div class="row mt-3">
        <label for="Points" class="col-sm-2 col-form-label">
            Points
        </label>
        <div class="col-sm-4">
            <InputNumber id="Points" class="form-control"
                         @bind-Value="Customer.Points" />
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
</EditForm>

@code {

    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;
    [Inject]
    DbCoreloginContext Context { get; set; }
    Customer Customer = new Customer();
    public IEnumerable<Customer> AllCustomers { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var result = CustomerService.GetCustomerById(Id);
            if (result is not null)
            {
                Customer = result;
            }
            else
            {
                NavigationManager.NavigateTo("/ccustomer");
            }
        }
    }
    protected override void OnInitialized()
    {
        btnText = Id == null ? "Save new Customer" : "Update Customer";
        Customer.TimeStampIdCard = CustomerService.GetTimestamp(DateTime.Now);
    }

    public string FormSubmitMessage { get; set; } = "Form Data Not Submitted";


    async Task HandleSubmit()
    {
        if (Id is null)
        {
            CustomerService.CreateCustomer(Customer);
        }
        else
        {
            CustomerService.UpdateCustomer((int)Id, Customer);
        }
    }
    public void BackToCustomers()
    {
        NavigationManager.NavigateTo("/customers");
    }

    //public void HandleValidSubmit()
    //{
    //    btnText = Id == null ? "Save new Customer" : "Update Customer";
    //    Context.Add(CustomerService);
    //    Context.SaveChanges();
    //    FormSubmitMessage = "Form Data Submitted";
    //}

    //public void HandleInvalidSubmit() => FormSubmitMessage = "Invalid Data Submitted";
}
